version: "3.8"
services:
  streaming-user-frontend-service:
    hostname: streaming-user-frontend-service
    container_name: streaming-user-frontend-service
    build:
      context: ./streaming-user-frontend-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - streaming-upload-management-service
      - streaming-post-listing-service
  streaming-admin-frontend-service:
    hostname: streaming-admin-frontend-service
    container_name: streaming-admin-frontend-service
    build:
      context: ./streaming-admin-frontend-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 3001:3001
    depends_on:
      - streaming-upload-management-service
      - streaming-post-listing-service
  streaming-post-listing-service:
    hostname: streaming-post-listing-service
    container_name: streaming-post-listing-service
    build:
      context: ./streaming-post-listing-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 5002:5002
    environment:
      - SESSION_SECRET=streaming
      - SESSION_MAX_AGE=120000
      - POSTGRES_HOST=streaming-postgres
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=streaming
      - POSTGRES_PORT=5432
    depends_on:
      - streaming-redis
      - streaming-postgres
      # - streaming-mongo
  streaming-upload-management-service:
    hostname: streaming-upload-management-service
    container_name: streaming-upload-management-service
    build:
      context: ./streaming-upload-management-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 5000:5000
    environment:
      - SESSION_SECRET=streaming
      - SESSION_MAX_AGE=120000
      - POSTGRES_HOST=streaming-postgres
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=streaming
      - POSTGRES_PORT=5432
    depends_on:
      - streaming-transcoding-service
      - streaming-postgres
      - streaming-kafka
  streaming-transcoding-service:
    hostname: streaming-transcoding-service
    container_name: streaming-transcoding-service
    build:
      context: ./streaming-transcoding-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 5001:5001
    environment:
      - SESSION_SECRET=streaming
      - SESSION_MAX_AGE=120000
      - POSTGRES_HOST=streaming-postgres
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=streaming
      - POSTGRES_PORT=5432
    depends_on:
      - streaming-postgres
      - streaming-kafka
      - streaming-redis
      # - streaming-mongo
  streaming-auth-service:
    hostname: streaming-auth-service
    container_name: streaming-auth-service
    build:
      context: ./streaming-auth-service
      dockerfile: Dockerfile
    networks:
      - streaming
    restart: always
    ports:
      - 5003:5003
    environment:
      - SESSION_SECRET=streaming
      - SESSION_MAX_AGE=120000
      - POSTGRES_HOST=streaming-postgres
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=streaming
      - POSTGRES_PORT=5432
    depends_on:
      - streaming-postgres
      - streaming-redis
  streaming-redis:
    hostname: streaming-redis
    container_name: streaming-redis
    image: redis:8.0-M02-alpine
    ports:
      - 6379:6379
    volumes:
      - streaming_redis:/data
    restart: always
  streaming-postgres:
    hostname: streaming-postgres
    image: postgres:latest
    container_name: streaming-postgres
    environment:
      - POSTGRES_USER=streaming
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=streaming
    ports:
      - 5433:5432
    volumes:
      - streaming_postgres:/var/lib/postgresql/data
      - ./utilities/database:/docker-entrypoint-initdb.d/
    restart: always
    networks:
      - streaming
  streaming-pgadmin:
    hostname: streaming-pgadmin
    image: dpage/pgadmin4:latest
    container_name: streaming-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - 5555:80
    depends_on:
      - streaming-postgres
    restart: always
    networks:
      - streaming
    volumes:
      - streaming_postgres_pgadmin:/var/lib/pgadmin
  streaming-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: streaming-zookeeper
    hostname: streaming-zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - 2181:2181
    restart: always
    volumes:
      - streaming_zookeeper:/var/lib/zookeeper
    networks:
      - streaming
  streaming-kafka:
    image: wurstmeister/kafka:latest
    container_name: streaming-kafka
    hostname: streaming-kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=streaming-zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://streaming-kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
    volumes:
      - streaming_kafka:/kafka
    depends_on:
      - streaming-zookeeper
    restart: always
    networks:
      - streaming
  # streaming-mongo:
  #   hostname: streaming-mongo
  #   container_name: streaming-mongo
  #   image: mongo:noble
  #   volumes:
  #     - streaming_mongodb:/data/db
  #   networks:
  #     - streaming
  #   ports:
  #     - 27017:27017
  #   restart: always
networks:
  streaming:
volumes:
  streaming:
  streaming_redis:
  streaming_postgres:
  streaming_postgres_pgadmin:
  streaming_mongodb:
  streaming_kafka:
  streaming_zookeeper:
